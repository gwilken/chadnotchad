{"id":"train.js","dependencies":[{"name":"/Users/gregwilken/code/chadnotchad/.babelrc","includedInParent":true,"mtime":1568502470146},{"name":"/Users/gregwilken/code/chadnotchad/train/package.json","includedInParent":true,"mtime":1568570823773},{"name":"@tensorflow/tfjs-node","loc":{"line":1,"column":7},"parent":"/Users/gregwilken/code/chadnotchad/train/train.js","resolved":"/Users/gregwilken/code/chadnotchad/train/node_modules/@tensorflow/tfjs-node/dist/index.js"},{"name":"canvas","loc":{"line":2,"column":24},"parent":"/Users/gregwilken/code/chadnotchad/train/train.js","resolved":"/Users/gregwilken/code/chadnotchad/train/node_modules/canvas/browser.js"},{"name":"face-api.js","loc":{"line":3,"column":25},"parent":"/Users/gregwilken/code/chadnotchad/train/train.js","resolved":"/Users/gregwilken/code/chadnotchad/train/node_modules/face-api.js/build/es6/index.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"@tensorflow/tfjs-node\");\n\nvar canvas = _interopRequireWildcard(require(\"canvas\"));\n\nvar faceapi = _interopRequireWildcard(require(\"face-api.js\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Canvas = canvas.Canvas,\n    Image = canvas.Image,\n    ImageData = canvas.ImageData;\nfaceapi.env.monkeyPatch({\n  Canvas: Canvas,\n  Image: Image,\n  ImageData: ImageData\n}); // console.log()\n\nvar run =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return faceapi.nets.ssdMobilenetv1.loadFromDisk('/models');\n\n          case 2:\n            _context.next = 4;\n            return faceapi.nets.faceLandmark68Net.loadFromDisk('/models');\n\n          case 4:\n            _context.next = 6;\n            return faceapi.nets.mtcnn.loadFromDisk('/models');\n\n          case 6:\n            _context.next = 8;\n            return faceapi.nets.faceRecognitionNet.loadFromDisk('/models');\n\n          case 8:\n            console.log('models loaded.'); // await faceapi.loadSsdMobilenetv1Model(MODEL_URL)\n            // await faceapi.loadFaceLandmarkModel(MODEL_URL)\n            // await faceapi.loadMtcnnModel(MODEL_URL)\n            // await faceapi.loadFaceRecognitionModel(MODEL_URL)\n            // const labels = ['katie', 'ben', 'anthony', 'marya', 'mel', 'vietnam', 'john', 'greg']\n            // const labeledFaceDescriptors = await Promise.all(\n            //   labels.map(async label => {\n            //     // fetch image data from urls and convert blob to HTMLImage element\n            //     const imgUrl = `./images/${label}.jpg`\n            //     const img = await faceapi.fetchImage(imgUrl)\n            //     // detect the face with the highest score in the image and compute it's landmarks and face descriptor\n            //     const fullFaceDescription = await faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor()\n            //     if (!fullFaceDescription) {\n            //       throw new Error(`no faces detected for ${label}`)\n            //     }\n            //     const faceDescriptors = [fullFaceDescription.descriptor]\n            //     return new faceapi.LabeledFaceDescriptors(label, faceDescriptors)\n            //   })\n            // )\n            // console.log(labeledFaceDescriptors)\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function run() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nrun();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"train.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"train.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"train.js","original":{"line":3,"column":0}},{"name":"Canvas","generated":{"line":17,"column":4},"source":"train.js","original":{"line":5,"column":8}},{"name":"canvas","generated":{"line":17,"column":13},"source":"train.js","original":{"line":5,"column":37}},{"name":"Canvas","generated":{"line":17,"column":20},"source":"train.js","original":{"line":5,"column":8}},{"name":"Image","generated":{"line":18,"column":4},"source":"train.js","original":{"line":5,"column":16}},{"name":"canvas","generated":{"line":18,"column":12},"source":"train.js","original":{"line":5,"column":37}},{"name":"Image","generated":{"line":18,"column":19},"source":"train.js","original":{"line":5,"column":16}},{"name":"ImageData","generated":{"line":19,"column":4},"source":"train.js","original":{"line":5,"column":23}},{"name":"canvas","generated":{"line":19,"column":16},"source":"train.js","original":{"line":5,"column":37}},{"name":"ImageData","generated":{"line":19,"column":23},"source":"train.js","original":{"line":5,"column":23}},{"name":"faceapi","generated":{"line":20,"column":0},"source":"train.js","original":{"line":6,"column":0}},{"generated":{"line":20,"column":7},"source":"train.js","original":{"line":6,"column":7}},{"name":"env","generated":{"line":20,"column":8},"source":"train.js","original":{"line":6,"column":8}},{"generated":{"line":20,"column":11},"source":"train.js","original":{"line":6,"column":0}},{"name":"monkeyPatch","generated":{"line":20,"column":12},"source":"train.js","original":{"line":6,"column":12}},{"generated":{"line":20,"column":23},"source":"train.js","original":{"line":6,"column":0}},{"generated":{"line":20,"column":24},"source":"train.js","original":{"line":6,"column":24}},{"name":"Canvas","generated":{"line":21,"column":0},"source":"train.js","original":{"line":6,"column":26}},{"name":"Canvas","generated":{"line":21,"column":2},"source":"train.js","original":{"line":6,"column":26}},{"generated":{"line":21,"column":8},"source":"train.js","original":{"line":6,"column":32}},{"name":"Canvas","generated":{"line":21,"column":10},"source":"train.js","original":{"line":6,"column":26}},{"generated":{"line":21,"column":16},"source":"train.js","original":{"line":6,"column":24}},{"name":"Image","generated":{"line":22,"column":0},"source":"train.js","original":{"line":6,"column":34}},{"name":"Image","generated":{"line":22,"column":2},"source":"train.js","original":{"line":6,"column":34}},{"generated":{"line":22,"column":7},"source":"train.js","original":{"line":6,"column":39}},{"name":"Image","generated":{"line":22,"column":9},"source":"train.js","original":{"line":6,"column":34}},{"generated":{"line":22,"column":14},"source":"train.js","original":{"line":6,"column":24}},{"name":"ImageData","generated":{"line":23,"column":0},"source":"train.js","original":{"line":6,"column":41}},{"name":"ImageData","generated":{"line":23,"column":2},"source":"train.js","original":{"line":6,"column":41}},{"generated":{"line":23,"column":11},"source":"train.js","original":{"line":6,"column":50}},{"name":"ImageData","generated":{"line":23,"column":13},"source":"train.js","original":{"line":6,"column":41}},{"generated":{"line":24,"column":0},"source":"train.js","original":{"line":6,"column":24}},{"generated":{"line":24,"column":1},"source":"train.js","original":{"line":6,"column":0}},{"generated":{"line":24,"column":4},"source":"train.js","original":{"line":8,"column":0}},{"generated":{"line":26,"column":0},"source":"train.js","original":{"line":10,"column":0}},{"name":"run","generated":{"line":26,"column":4},"source":"train.js","original":{"line":10,"column":6}},{"generated":{"line":26,"column":7},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":27,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":28,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":29,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":30,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":31,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":31,"column":26},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":32,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":33,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":34,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":35,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":36,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":37,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"name":"faceapi","generated":{"line":37,"column":19},"source":"train.js","original":{"line":11,"column":8}},{"generated":{"line":37,"column":26},"source":"train.js","original":{"line":11,"column":15}},{"name":"nets","generated":{"line":37,"column":27},"source":"train.js","original":{"line":11,"column":16}},{"generated":{"line":37,"column":31},"source":"train.js","original":{"line":11,"column":8}},{"name":"ssdMobilenetv1","generated":{"line":37,"column":32},"source":"train.js","original":{"line":11,"column":21}},{"generated":{"line":37,"column":46},"source":"train.js","original":{"line":11,"column":8}},{"name":"loadFromDisk","generated":{"line":37,"column":47},"source":"train.js","original":{"line":11,"column":36}},{"generated":{"line":37,"column":59},"source":"train.js","original":{"line":11,"column":8}},{"generated":{"line":37,"column":60},"source":"train.js","original":{"line":11,"column":49}},{"generated":{"line":37,"column":69},"source":"train.js","original":{"line":11,"column":8}},{"generated":{"line":37,"column":70},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":39,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":40,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":41,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"name":"faceapi","generated":{"line":41,"column":19},"source":"train.js","original":{"line":12,"column":8}},{"generated":{"line":41,"column":26},"source":"train.js","original":{"line":12,"column":15}},{"name":"nets","generated":{"line":41,"column":27},"source":"train.js","original":{"line":12,"column":16}},{"generated":{"line":41,"column":31},"source":"train.js","original":{"line":12,"column":8}},{"name":"faceLandmark68Net","generated":{"line":41,"column":32},"source":"train.js","original":{"line":12,"column":21}},{"generated":{"line":41,"column":49},"source":"train.js","original":{"line":12,"column":8}},{"name":"loadFromDisk","generated":{"line":41,"column":50},"source":"train.js","original":{"line":12,"column":39}},{"generated":{"line":41,"column":62},"source":"train.js","original":{"line":12,"column":8}},{"generated":{"line":41,"column":63},"source":"train.js","original":{"line":12,"column":52}},{"generated":{"line":41,"column":72},"source":"train.js","original":{"line":12,"column":8}},{"generated":{"line":41,"column":73},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":43,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":44,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":45,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"name":"faceapi","generated":{"line":45,"column":19},"source":"train.js","original":{"line":13,"column":8}},{"generated":{"line":45,"column":26},"source":"train.js","original":{"line":13,"column":15}},{"name":"nets","generated":{"line":45,"column":27},"source":"train.js","original":{"line":13,"column":16}},{"generated":{"line":45,"column":31},"source":"train.js","original":{"line":13,"column":8}},{"name":"mtcnn","generated":{"line":45,"column":32},"source":"train.js","original":{"line":13,"column":21}},{"generated":{"line":45,"column":37},"source":"train.js","original":{"line":13,"column":8}},{"name":"loadFromDisk","generated":{"line":45,"column":38},"source":"train.js","original":{"line":13,"column":27}},{"generated":{"line":45,"column":50},"source":"train.js","original":{"line":13,"column":8}},{"generated":{"line":45,"column":51},"source":"train.js","original":{"line":13,"column":40}},{"generated":{"line":45,"column":60},"source":"train.js","original":{"line":13,"column":8}},{"generated":{"line":45,"column":61},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":47,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":48,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":49,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"name":"faceapi","generated":{"line":49,"column":19},"source":"train.js","original":{"line":14,"column":8}},{"generated":{"line":49,"column":26},"source":"train.js","original":{"line":14,"column":15}},{"name":"nets","generated":{"line":49,"column":27},"source":"train.js","original":{"line":14,"column":16}},{"generated":{"line":49,"column":31},"source":"train.js","original":{"line":14,"column":8}},{"name":"faceRecognitionNet","generated":{"line":49,"column":32},"source":"train.js","original":{"line":14,"column":21}},{"generated":{"line":49,"column":50},"source":"train.js","original":{"line":14,"column":8}},{"name":"loadFromDisk","generated":{"line":49,"column":51},"source":"train.js","original":{"line":14,"column":40}},{"generated":{"line":49,"column":63},"source":"train.js","original":{"line":14,"column":8}},{"generated":{"line":49,"column":64},"source":"train.js","original":{"line":14,"column":53}},{"generated":{"line":49,"column":73},"source":"train.js","original":{"line":14,"column":8}},{"generated":{"line":49,"column":74},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":51,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"name":"console","generated":{"line":52,"column":0},"source":"train.js","original":{"line":16,"column":2}},{"name":"console","generated":{"line":52,"column":12},"source":"train.js","original":{"line":16,"column":2}},{"generated":{"line":52,"column":19},"source":"train.js","original":{"line":16,"column":9}},{"name":"log","generated":{"line":52,"column":20},"source":"train.js","original":{"line":16,"column":10}},{"generated":{"line":52,"column":23},"source":"train.js","original":{"line":16,"column":2}},{"generated":{"line":52,"column":24},"source":"train.js","original":{"line":16,"column":14}},{"generated":{"line":52,"column":40},"source":"train.js","original":{"line":16,"column":2}},{"generated":{"line":52,"column":42},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":52,"column":43},"source":"train.js","original":{"line":18,"column":2}},{"generated":{"line":53,"column":0},"source":"train.js","original":{"line":19,"column":2}},{"generated":{"line":54,"column":0},"source":"train.js","original":{"line":20,"column":2}},{"generated":{"line":55,"column":0},"source":"train.js","original":{"line":21,"column":2}},{"generated":{"line":56,"column":0},"source":"train.js","original":{"line":23,"column":2}},{"generated":{"line":57,"column":0},"source":"train.js","original":{"line":25,"column":2}},{"generated":{"line":58,"column":0},"source":"train.js","original":{"line":26,"column":2}},{"generated":{"line":59,"column":0},"source":"train.js","original":{"line":27,"column":2}},{"generated":{"line":60,"column":0},"source":"train.js","original":{"line":28,"column":2}},{"generated":{"line":61,"column":0},"source":"train.js","original":{"line":29,"column":2}},{"generated":{"line":62,"column":0},"source":"train.js","original":{"line":31,"column":2}},{"generated":{"line":63,"column":0},"source":"train.js","original":{"line":32,"column":2}},{"generated":{"line":64,"column":0},"source":"train.js","original":{"line":34,"column":2}},{"generated":{"line":65,"column":0},"source":"train.js","original":{"line":35,"column":2}},{"generated":{"line":66,"column":0},"source":"train.js","original":{"line":36,"column":2}},{"generated":{"line":67,"column":0},"source":"train.js","original":{"line":38,"column":2}},{"generated":{"line":68,"column":0},"source":"train.js","original":{"line":39,"column":2}},{"generated":{"line":69,"column":0},"source":"train.js","original":{"line":40,"column":2}},{"generated":{"line":70,"column":0},"source":"train.js","original":{"line":41,"column":2}},{"generated":{"line":71,"column":0},"source":"train.js","original":{"line":43,"column":2}},{"generated":{"line":73,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":74,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":75,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":76,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":77,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":78,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":79,"column":0},"source":"train.js","original":{"line":10,"column":12}},{"generated":{"line":79,"column":3},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":81,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"name":"run","generated":{"line":81,"column":18},"source":"train.js","original":{"line":10,"column":6}},{"generated":{"line":81,"column":21},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":82,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":83,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":84,"column":0},"source":"train.js","original":{"line":10,"column":9}},{"generated":{"line":84,"column":3},"source":"train.js","original":{"line":10,"column":0}},{"name":"run","generated":{"line":86,"column":0},"source":"train.js","original":{"line":47,"column":0}},{"generated":{"line":86,"column":3},"source":"train.js","original":{"line":47,"column":3}}],"sources":{"train.js":"import '@tensorflow/tfjs-node';\nimport * as canvas from 'canvas';\nimport * as faceapi from 'face-api.js';\n\nconst { Canvas, Image, ImageData } = canvas\nfaceapi.env.monkeyPatch({ Canvas, Image, ImageData })\n\n// console.log()\n\nconst run = async () => {\n  await faceapi.nets.ssdMobilenetv1.loadFromDisk('/models')\n  await faceapi.nets.faceLandmark68Net.loadFromDisk('/models')\n  await faceapi.nets.mtcnn.loadFromDisk('/models')\n  await faceapi.nets.faceRecognitionNet.loadFromDisk('/models')\n\n  console.log('models loaded.')\n\n  // await faceapi.loadSsdMobilenetv1Model(MODEL_URL)\n  // await faceapi.loadFaceLandmarkModel(MODEL_URL)\n  // await faceapi.loadMtcnnModel(MODEL_URL)\n  // await faceapi.loadFaceRecognitionModel(MODEL_URL)\n\n  // const labels = ['katie', 'ben', 'anthony', 'marya', 'mel', 'vietnam', 'john', 'greg']\n\n  // const labeledFaceDescriptors = await Promise.all(\n  //   labels.map(async label => {\n  //     // fetch image data from urls and convert blob to HTMLImage element\n  //     const imgUrl = `./images/${label}.jpg`\n  //     const img = await faceapi.fetchImage(imgUrl)\n      \n  //     // detect the face with the highest score in the image and compute it's landmarks and face descriptor\n  //     const fullFaceDescription = await faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor()\n      \n  //     if (!fullFaceDescription) {\n  //       throw new Error(`no faces detected for ${label}`)\n  //     }\n      \n  //     const faceDescriptors = [fullFaceDescription.descriptor]\n  //     return new faceapi.LabeledFaceDescriptors(label, faceDescriptors)\n  //   })\n  // )\n\n  // console.log(labeledFaceDescriptors)\n\n}\n\nrun()\n"},"lineCount":null}},"error":null,"hash":"05641d82f556fea231dc108a8d3153b6","cacheData":{"env":{}}}