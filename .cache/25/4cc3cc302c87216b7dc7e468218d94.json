{"id":"cSOR","dependencies":[{"name":"/Users/gregwilken/code/chadnotchad/node_modules/face-api.js/build/es6/faceProcessor/util.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/gregwilken/code/chadnotchad/node_modules/face-api.js/src/faceProcessor/util.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/gregwilken/code/chadnotchad/package.json","includedInParent":true,"mtime":1568572563000},{"name":"/Users/gregwilken/code/chadnotchad/node_modules/face-api.js/package.json","includedInParent":true,"mtime":1568569762542}],"generated":{"js":"\"use strict\";function e(e){var t={},r={};return Object.keys(e).forEach(function(s){(s.startsWith(\"fc\")?r:t)[s]=e[s]}),{featureExtractorMap:t,classifierMap:r}}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.seperateWeightMaps=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":1,"column":13}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":3,"column":16},"generated":{"line":1,"column":22}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":3,"column":35},"generated":{"line":1,"column":24}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":1,"column":27}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":5,"column":8},"generated":{"line":1,"column":31}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":5,"column":49},"generated":{"line":1,"column":33}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":6,"column":8},"generated":{"line":1,"column":36}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":6,"column":43},"generated":{"line":1,"column":38}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":1,"column":41}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":1,"column":48}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":8,"column":9},"generated":{"line":1,"column":55}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":8,"column":14},"generated":{"line":1,"column":60}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":8,"column":25},"generated":{"line":1,"column":63}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":8,"column":33},"generated":{"line":1,"column":71}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":8,"column":33},"generated":{"line":1,"column":80}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":1,"column":84}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":1,"column":86}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":9,"column":31},"generated":{"line":1,"column":97}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":9,"column":39},"generated":{"line":1,"column":103}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":9,"column":55},"generated":{"line":1,"column":105}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":10,"column":8},"generated":{"line":1,"column":108}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":10,"column":15},"generated":{"line":1,"column":111}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":10,"column":25},"generated":{"line":1,"column":113}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":1,"column":118}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":1,"column":119}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":13,"column":30},"generated":{"line":1,"column":139}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":13,"column":32},"generated":{"line":1,"column":141}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":13,"column":45},"generated":{"line":1,"column":155}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":158}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":165}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":180}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":188}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":201}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":202}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":209}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":213}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":221}},{"source":"../../../src/faceProcessor/util.ts","name":null,"original":{"line":15,"column":1},"generated":{"line":1,"column":240}}],"sources":{"../../../src/faceProcessor/util.ts":"import * as tf from '@tensorflow/tfjs-core';\r\n\r\nexport function seperateWeightMaps(weightMap: tf.NamedTensorMap) {\r\n\r\n  const featureExtractorMap: tf.NamedTensorMap = {}\r\n  const classifierMap: tf.NamedTensorMap = {}\r\n\r\n  Object.keys(weightMap).forEach(key => {\r\n    const map = key.startsWith('fc') ? classifierMap : featureExtractorMap\r\n    map[key] = weightMap[key]\r\n  })\r\n\r\n  return { featureExtractorMap, classifierMap }\r\n\r\n}"},"lineCount":null}},"error":null,"hash":"1e2c4bb5920a42e08f01b7cdb5dc0d75","cacheData":{"env":{}}}